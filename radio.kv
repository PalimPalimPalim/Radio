
RootScreenManager:
<BaseScreen>:
    name: "base"
    BoxLayout:
        orientation: "horizontal"
        # -------left side -------
        FloatLayout:
            PlayPauseButton:
                id: playpausebutton
                canvas.before:
                    Color:
                        rgba: [1, 1, 1, 1]
                    Line:
                        width: 1
                        ellipse: (self.x, self.y, self.width, self.height)
                pos_hint: {"center_x": 0.5, "center_y": 0.1}
                size_hint: (None, None)
                width: 90
                height: 90
                on_press: self.toggle()
                on_enter: self._hover_add_background()
                on_leave: self._hover_remove_background()
            Image:
                id: playing_channel_img
                pos_hint: {"center_x": 0.5, "center_y": 0.92}
                size_hint: (1/5, None)
                height: self.width
                source: "./ButtonImages/" + app.playing_image
                canvas.before:
                    Color:
                        rgba: [1, 1, 1, 1]
                    Line:
                        width: 1
                        rectangle: self.x, self.y, self.width, self.height
            
            CoverImage:
                id: cover_image
                pos_hint: {"center_x": 0.5, "center_y": 0.55}
                size_hint: (0.55, None)
                height: self.width
                cover_info: app.meta_info
                on_cover_info: self.update_cover()
                source: "./ButtonImages/black.png"
                allow_stretch: True
                canvas.after:
                    Color:
                        rgba: [1, 1, 1, 1]
                    Line:
                        width: 1
                        rectangle: self.x, self.y, self.width, self.height


            Label:
                text: '[b]' + app.station + '[/b]\n' + app.meta_info
                pos_hint: {"center_x": 0.5, "center_y": 0.25}
                size_hint_y: None
                halign: "center"
                text_size: self.width, None
                height: self.texture_size[1]
                width: self.parent.width * 0.9
                markup: True


        # -------right side ------
        TabbedPanel
            do_default_tab: False

            TabbedPanelItem:   
                text: 'Radio'
                ScrollView:
                    RadioGrid:

            TabbedPanelItem:
                text: "News"
                ScrollView:
                    do_scroll_y: True
                    ScrollView:
                        height: self.parent.height + 0.01
                        NewsGrid:
                            DFNews:
                            PodcastBttn:
                                name:"Economist Radio"
                                img:"Economist_Radio.png"
                                url:"https://www.podbean.com/podcast-detail/jdhgv-2ef60/Economist-Radio-Podcast"
                            PodcastBttn:
                                name: "The-Intelligence-Podcast"
                                img:"Economist_The_Intelligence.jpeg"
                                url:"https://www.podbean.com/podcast-detail/54iea-2f1da/The-Intelligence-Podcast"
                            PodcastBttn:
                                name: "Babbage"
                                img:"Economist_Babbage.jpeg"
                                url:"https://www.podbean.com/podcast-detail/c7eq6-35611/Babbage-from-Economist-Radio-Podcast"
                            PodcastBttn:
                                name: "The Economist Asks"
                                img:"Economist_asks.jpeg"
                                url:"https://www.podbean.com/podcast-detail/7pnbt-403a3/The-Economist-Asks-Podcast"
                            PodcastBttn:
                                name: "Editor's Picks from The Economist"
                                img:"Economist_Editors_Picks.jpeg"
                                url:"https://www.podbean.com/podcast-detail/83zby-2f1d2/Editor%27s-Picks-from-The-Economist-Podcast"
                            PodcastBttn:
                                name: "Money Talks from Economist Radio"
                                img:"Economist_Money_talks.jpeg"
                                url:"https://www.podbean.com/podcast-detail/rnbqd-2f1c9/Money-Talks-from-Economist-Radio-Podcast"

                            PodcastBttn2:
                                name: "Eine-Stunde-Film"
                                img:"eine-stunde-film.jpg"
                                url:"https://www.deutschlandfunknova.de/podcast/update"
                            PodcastBttn2:
                                name: "Wissensnachrichten"
                                img:"Wissensnachrichten_DLFNova.jpg"
                                url:"https://www.deutschlandfunknova.de/podcast/wissensnachrichten"
                            PodcastBttn2:
                                name: "Eine-Stunde-Liebe"
                                img:"EineStunde_Liebe_DLFNova.jpg"
                                url:"https://www.deutschlandfunknova.de/podcast/eine-stunde-liebe"
                            PodcastBttn2:
                                name: "Netzbasteln"
                                img:"Netzbasteln_DLFNova.jpg"
                                url:"https://www.deutschlandfunknova.de/podcast/netzbasteln"


                                


                                

            TabbedPanelItem:
                text: "Videos"
                GridLayout:
                    cols: 1
                    GridLayout:
                        size_hint_y: None
                        height: self.width / 3 if video_grid.is_refreshing else 0
                        cols: 3
                        Widget:
                        Label: 
                            progress: video_grid.perc_finished
                            text: str(int(round(self.progress, 2) * 100)) + '%' if video_grid.is_refreshing else ''
                            canvas.after:
                                Color:
                                    rgba: 1,1,1, 0 if self.text == '' else 1
                                Line:
                                    circle: self.center_x, self.center_y, (self.width / 2) * 0.8, 0, float(self.progress) * 360 if self.progress else 0 
                                    width: 2 
                        Widget:
                    RefreshScrollView:
                        do_scroll_y: True
                        on_refresh: video_grid.refresh()
                        height: self.parent.height + 0.01
                        VideoGrid:
                            id: video_grid

<RefreshScrollView>:
    on_scroll_move: self.check_refresh()
    on_refresh: print('refresh')

<VideoGridSpacer>:
    size_hint: (1, None)
    height: self.width

<PodcastBttn>:
    size_hint: (1, None)
    height: self.width
    background_normal: './ButtonImages/' + self.img
    #on_press: self.open_popup()
    on_press: self.podcast_search_links()
    on_press: self.background_normal = '' 
    on_release:  self.background_normal = './ButtonImages/' + self.img


<ChannelGrid>:
    size_hint_y: None
    height: self.minimum_height
    cols: 3
    spacing: [5, 5]


<RadioButton>:
    size_hint: (1, None)
    height: self.width
    background_normal: './ButtonImages/' + self.image
    on_press: self.background_normal = '' 
    on_press: 
        self.play_channel()
    on_release:  self.background_normal = './ButtonImages/' + self.image

<TabbedPanelHeader>
    canvas.after:
        Color:
            rgba: 1, 1, 1, 1
        Line:
            points: [self.pos[0] + 2, self.pos[1],self.pos[0] + 2, self.pos[1]+ self.height - 2,self.pos[0] + self.width - 2, self.pos[1]+ self.height - 2, self.pos[0] + self.width - 2, self.pos[1]]
            width: 1
    background_color: 1,1,1,1

<ScrollGridLayout>:
    size_hint_y: None
    height: self.minimum_height

<PodcastPopupRow>:
    orientation: "horizontal"
    rows: 1
    size_hint_y: None
    height: 100
    spacing: 5
    on_press: print("button pressed")
    on_press: self.play_channel()

    canvas.before:
        Color:
            rgba: [1, 1, 1, 1]
        Line:
            width: 1
            rectangle: self.x, self.y, self.width, self.height

    Image:
        source: './ButtonImages/' + root.image
        size_hint: (None, None)
        width: root.height
        height: root.height
    BoxLayout:
        orientation: "vertical"
        padding: [5,5,5,5]
        spacing: 1
        Label:
            text: root.timestamp
            size_hint_y: 1/3
        Label:
            text: root.description
            text_size: self.width, None
            halign: 'left'
            valign: 'middle'
            
<LoadingModal>:
    background: './ButtonImages/transparent.png'
    size_hint: None, None
    width: self.height
    height: app.root.height* 0.5
    LoadingWdgt:
        auto_dismiss: False
        text: "Loading "
        canvas.after:
            Color:
                rgb: 1,1,1
            Line:
                circle:self.center_x, self.center_y, (self.width / 2) * 0.8, self.angle_1, self.angle_2
                width: 2
        size_hint_y: None
        height: self.width

<ScreenSaver>:
    name: 'screen_saver'
    on_press: print('PalimPalim')
    RelativeLayout:
        ClockLabel:
            pos_hint: {'center_x': 0.75, 'center_y': 2/3}
        Label:
            text: '[b]' + app.station + '[/b]\n' + app.meta_info
            pos_hint: {"center_x": 0.75, "center_y": 1/3}
            size_hint_y: None
            halign: "center"
            text_size: self.width, None
            height: self.texture_size[1]
            width: self.parent.width * 0.45
            markup: True
        CoverImage:
            id: cover_image
            pos_hint: {"center_x": 0.25, "center_y": 0.5}
            size_hint: (None, 0.6)
            width: self.height
            cover_info: app.meta_info
            on_cover_info: self.update_cover()
            source: "./ButtonImages/black.png"
            allow_stretch: True
            canvas.after:
                Color:
                    rgba: [1, 1, 1, 1]
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height
        Image:
            id: playing_channel_img
            pos_hint: {"center_x": 0.75, "center_y": 0.5}
            size_hint: (None, 1/5)
            width: self.height
            source: "./ButtonImages/" + app.playing_image
            canvas.before:
                Color:
                    rgba: [1, 1, 1, 1]
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height

<VideoPlayerScreen>:
    id: 'scrn_video'
    slider: slider
    name: "video"
    video_path: app.playing_video
    on_enter: self.play()
    FloatLayout:
        BoxLayout:
            orientation: 'vertical'
            BoxLayout:
                orientation: 'horizontal'
                size_hint_y: None
                height: close_bttn.height
                Button:
                    on_press: root.change_size()
                    size_hint_x: 92
                    background_color: (0,0,0,1)
                Button:
                    id: close_bttn
                    size_hint_x: 8
                    size_hint_y: None
                    height: self.width
                    background_color: (0,0,0,1)
                    on_press: root.player_stop()
                    on_press:app.root.current = 'base'
                    text: 'X'
                    font_size: 0.9 * self.height
            Button:
                on_press: root.change_size()
                background_color: (0,0,0,1)
            BoxLayout:
                orientation: 'horizontal'
                size_hint_y: None
                height: play_pause_bttn.height
                Button:
                    id: play_pause_bttn
                    on_press: root.play_pause()
                    size_hint_x: 8
                    size_hint_y: None
                    height: self.width
                    Image:
                        id: play_pause_image
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                Slider:
                    id: slider
                    size_hint_x: 92
                    on_value: root.set_videopos(self.value_normalized)


        # BoxLayout:
        #     orientation: 'vertical'
        #     size_hint_y: 60

        #     BoxLayout:
        #         Button:
        #             text: 'Play/Pause'
        #             on_press: root.playpause()